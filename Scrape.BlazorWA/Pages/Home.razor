@page "/"

@using Scrape.Model
@using Scrape.Data.Helpers

@using OpenQA.Selenium;
@using OpenQA.Selenium.Chrome;
@using Scrape.Sdk
@using System.Net

@inject Data data;
@inject ScrapeApi scrapeApi;

@inject NavigationManager navManager

<PageTitle>Scraper</PageTitle>

<h1>Vind een job:</h1>

<div class="clearfix">
    @foreach (var str in CheckedDomains)
    {
        <div class="domain" @onclick="() => ScrapeWebsite()">@str</div>
    }
</div>



<div class="btn-group">
    <button type="button" class="btn btn-danger dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        Action
    </button>
    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            
    @foreach (var row in data.GetDomains())
    {
            <div class="dropdown-item" @onclick="() => Check(URL, row.Domain.Id)">
                &nbsp;@row.Domain.Title
            </div>
    }

    </div>
</div>


    <p>@Output</p>


@code {
    private List<string> CheckedDomains { get; set; } = new List<string>();

    private string Output { get; set; } = "";

    public string URL = "https://www.vdab.be/vindeenjob/vacatures/67057836/full-stack-developer?source=vindeenjob&medium=vacaturedashboard&classname=vej-results";

    protected override async Task OnInitializedAsync()
    {
        Output = await scrapeApi.GetString(URL);

    }

    public async void ScrapeWebsite()
    {
        // var className = "vej-results";
        
        Output = await scrapeApi.GetString(URL);
    }

    public void Check(string url, int domainId)
    {         

        // loop through domains
        foreach (var row in data.GetDomains().Where(r => r.Domain.Id == domainId))
        {
            // if URL has specific domain URLPattern
            if (URL.Contains(row.Domain.URLPattern))
            {
                // replace that domain URLPattern with empty string
                URL = URL.Replace(row.Domain.URLPattern, "");
            }
            else
            {
                // add pattern url
                // SearchPattern.URL += row.Domain.URLPattern;
                CheckedDomains.Add(row.Domain.Title);
            }
        }
    }
}
