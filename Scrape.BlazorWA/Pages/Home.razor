@page "/"



@using Scrape.Model
@using Scrape.Data.Helpers

@inject Data data;
@inject HTMLRequest request;

@inject NavigationManager navManager

<PageTitle>Scraper</PageTitle>

<h1>Vind een job:</h1>

<div>@SearchPattern.URL</div>

<div class="clearfix">
    @foreach (var str in CheckedDomains)
    {
        <div class="domain">@str</div>
    }
</div>



<div class="btn-group">
    <button type="button" class="btn btn-danger dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        Action
    </button>
    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            
    @foreach (var row in data.GetDomains())
    {
            <div class="dropdown-item" @onclick="() => Check(row.Domain.Id)">                
                &nbsp;@row.Domain.Title
            </div>
    }

    </div>
</div>

@foreach (var vac in Vacancies)
{   
    <div>
        @vac.Title
    </div>
}


<script>
    const puppeteer = require('puppeteer');

    (async () => {
        try {
            const browser = await puppeteer.launch();
            const page = await browser.newPage();
            await page.goto('https://www.vdab.be/vindeenjob/vacatures?sort=standaard&jobdomein=JOBCAT10');
            await page.waitForSelector('.body', { timeout: 1000 });

            const body = await page.evaluate(() => {
                return document.querySelector('body').innerHTML;
            });
            console.log(body);

            await browser.close();
        } catch (error) {
            console.log(error);
        }
    })();
</script>


@code {
    private SearchPattern SearchPattern { get; set; } = new SearchPattern();

    private List<string> CheckedDomains { get; set; } = new List<string>();

    private List<Vacancy> Vacancies = new List<Vacancy>();

    protected override async Task OnInitializedAsync()
    {


        // set standard URL VDAB website search vacancies
        SearchPattern.URL = "https://www.vdab.be/vindeenjob/vacatures?sort=standaard";

        // await ScrapeWebsite("https://www.vdab.be/vindeenjob/vacatures?sort=standaard&jobdomein=JOBCAT10");

    }

    private string Page { get; set; } = "";

    public async Task ScrapeWebsite(string url)
    {
        HttpClient client = new HttpClient();
        Page = await client.GetStringAsync(url);
    }

    public async Task Check(int domainId)
    {         

        // loop through domains
        foreach (var row in data.GetDomains().Where(r => r.Domain.Id == domainId))
        {
            // if SearchPattern.URL has specific domain URLPattern
            if (SearchPattern.URL.Contains(row.Domain.URLPattern))
            {
                // replace that domain URLPattern with empty string
                SearchPattern.URL = SearchPattern.URL.Replace(row.Domain.URLPattern, "");
            }
            else
            {
                // add pattern url
                SearchPattern.URL += row.Domain.URLPattern;
                CheckedDomains.Add(row.Domain.Title);
            }
        }
    }
}
